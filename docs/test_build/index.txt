Welcome to TensorLayer
**********************

[image]

**Documentation Version:** 1.9.1

**Good News:** We won the **Best Open Source Software Award** @ACM
Multimedia (MM) 2017.

TensorLayer is a Deep Learning (DL) and Reinforcement Learning (RL)
library extended from Google TensorFlow.  It provides popular DL and
RL modules that can be easily customized and assembled for tackling
real-world machine learning problems. More details can be found here.

Note: If you got problem to read the docs online, you could download
  the repository on GitHub, then go to "/docs/_build/html/index.html"
  to read the docs offline. The "_build" folder can be generated in
  "docs" using "make html".


User Guide
==========

The TensorLayer user guide explains how to install TensorFlow, CUDA
and cuDNN, how to build and train neural networks using TensorLayer,
and how to contribute to the library as a developer.

Starting with TensorLayer

* Installation

  * Step 1 : Install dependencies

  * Step 2 : TensorFlow

  * Step 3 : TensorLayer

  * Step 4 : GPU support

  * Windows User

  * Issue

* Tutorials

  * Before we start

  * TensorLayer is simple

  * Run the MNIST example

  * Understand the MNIST example

  * Run the Pong Game example

  * Understand Reinforcement learning

  * Run the Word2Vec example

  * Understand Word Embedding

  * Run the PTB example

  * Understand LSTM

  * More Tutorials

  * More info

* Examples

  * Basics

  * Vision

  * Adversarial Learning

  * Natural Language Processing

  * Reinforcement Learning

  * Pretrained Models

  * Miscellaneous

* Contributing

  * Project Maintainers

  * What to contribute

  * How to contribute

* Get Involved in Research

  * Data Science Institute, Imperial College London

* FAQ

  * How to effectively learn TensorLayer

  * Exclude some layers from training

  * Logging

  * Visualization

  * Install Master Version

  * Editable Mode

  * Load Model


API Reference
=============

If you are looking for information on a specific function, class or
method, this part of the documentation is for you.

Stable Functionalities

* API - Activations

  * Your activation

  * Ramp

  * Leaky ReLU

  * Leaky ReLU6

  * Twice Leaky ReLU6

  * Swish

  * Sign

  * Hard Tanh

  * Pixel-wise softmax

  * Parametric activation

* API - Array Operations

  * Tensorflow Tensor Operations

* API - Cost

  * Your cost function

  * Softmax cross entropy

  * Sigmoid cross entropy

  * Binary cross entropy

  * Mean squared error (L2)

  * Normalized mean square error

  * Absolute difference error (L1)

  * Dice coefficient

  * Hard Dice coefficient

  * IOU coefficient

  * Cross entropy for sequence

  * Cross entropy with mask for sequence

  * Cosine similarity

  * Regularization functions

* API - Distributed Training

  * Distributed training

  * Session hooks

* API - Files

  * Load dataset functions

  * Load and save network

  * Load and save variables

  * Folder/File functions

  * Sort

  * Visualizing npz file

* API - Iteration

  * Non-time series

  * Time series

* API - Layers

  * Name Scope and Sharing Parameters

  * Understanding the Basic Layer

  * Layer list

  * Customizing Layers

  * Basic Layer

  * Input Layers

  * Activation Layers

  * Convolutional Layers

  * Dense Layers

  * Dropout Layers

  * Extend Layers

  * External Libraries Layers

  * Flow Control Layer

  * Image Resampling Layers

  * Lambda Layers

  * Merge Layers

  * Noise Layer

  * Normalization Layers

  * Object Detection Layer

  * Padding Layers

  * Pooling Layers

  * Quantized Nets

  * Recurrent Layers

  * Shape Layers

  * Spatial Transformer

  * Stack Layer

  * Time Distributed Layer

  * Helper Functions

* API - Models

  * VGG16

  * VGG19

  * SqueezeNetV1

  * MobileNetV1

* API - Natural Language Processing

  * Iteration function for training embedding matrix

  * Sampling functions

  * Vector representations of words

  * Read words from file

  * Read analogy question file

  * Build vocabulary, word dictionary and word tokenization

  * Convert words to IDs and IDs to words

  * Functions for translation

  * Metrics

* API - Optimizers

  * Optimizers List

  * AMSGrad Optimizer

* API - Preprocessing

  * Threading

  * Images

  * Object detection

  * Sequence

* API - Reinforcement Learning

  * Reward functions

  * Cost functions

  * Sampling functions

* API - Utility

  * Training, testing and predicting

  * Evaluation functions

  * Class balancing functions

  * Random functions

  * Dictionary and list

  * Close TF session and associated processes

  * Open TensorBoard

  * Clear TensorFlow placeholder

  * Set GPU functions

* API - Visualization

  * Save and read images

  * Visualize model parameters

  * Visualize images

  * Visualize embeddings

Alpha Version Functionalities

* API - Database

  * Why Database

  * Preparation

  * Tutorials

  * TensorHub API


Command-line Reference
======================

TensorLayer provides a handy command-line tool *tl* to perform some
common tasks.

Command Line Interface

* CLI - Command Line Interface

  * tl train


Indices and tables
******************

* Index

* Module Index

* Search Page
